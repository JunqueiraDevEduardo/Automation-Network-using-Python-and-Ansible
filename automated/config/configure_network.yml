---
# Enhanced Network Configuration Playbook
# Works with Python-generated GNS3 topology
# File: ansible/configure_network.yml

- name: Configure Network Infrastructure
  hosts: all
  gather_facts: no
  connection: local
  
  vars:
    # Load network configuration from YAML
    network_config: "{{ lookup('file', '../network_data.yml') | from_yaml }}"
    
    # Common configuration
    domain_name: "company.local"
    ntp_server: "pool.ntp.org"
    dns_servers:
      - "8.8.8.8"
      - "8.8.4.4"
    
    # SNMP Configuration
    snmp_community: "public"
    snmp_location: "Main Office"
    snmp_contact: "network-admin@company.local"
    
    # Security settings
    enable_secret: "enable123"
    console_password: "console123"
    vty_password: "vty123"

  tasks:
    - name: Display network configuration
      debug:
        msg: "Configuring {{ network_config.project_name }} network topology"
      run_once: true

# Configure Core Router
- name: Configure Core Router
  hosts: routers
  gather_facts: no
  connection: network_cli
  
  vars:
    network_config: "{{ lookup('file', '../network_data.yml') | from_yaml }}"
    
  tasks:
    - name: Configure hostname
      ios_config:
        lines:
          - "hostname {{ inventory_hostname }}"
      
    - name: Configure basic settings
      ios_config:
        lines:
          - "service timestamps debug datetime msec"
          - "service timestamps log datetime msec"
          - "service password-encryption"
          - "no service dhcp"
          - "ip domain-name {{ domain_name }}"
          - "ip name-server {{ dns_servers | join(' ') }}"
          - "ntp server {{ ntp_server }}"
    
    - name: Configure enable secret
      ios_config:
        lines:
          - "enable secret {{ enable_secret }}"
    
    - name: Configure console and VTY access
      ios_config:
        lines:
          - "line console 0"
          - " password {{ console_password }}"
          - " login"
          - " logging synchronous"
          - "line vty 0 4"
          - " password {{ vty_password }}"
          - " login"
          - " transport input telnet ssh"
    
    - name: Enable IP routing
      ios_config:
        lines:
          - "ip routing"
    
    - name: Configure VLAN interfaces for inter-VLAN routing
      ios_config:
        lines:
          - "interface vlan {{ item.vlan_id }}"
          - " description {{ item.name }} VLAN Gateway"  
          - " ip address {{ item.gateway }} {{ item.network.split('/')[-1] | ipaddr('netmask') }}"
          - " no shutdown"
        parents: []
      loop: "{{ network_config.departments }}"
      when: network_config.departments is defined
    
    - name: Configure trunk interfaces to department switches
      ios_config:
        lines:
          - "interface gigabitethernet0/{{ item.0 + 2 }}"
          - " description Link to {{ item.1.name }} Department"
          - " switchport trunk encapsulation dot1q"
          - " switchport mode trunk"
          - " switchport trunk allowed vlan {{ item.1.vlan_id }}"
          - " no shutdown"
        parents: []
      loop: "{{ network_config.departments | default([]) | enumerate }}"
    
    - name: Configure internet/WAN interface
      ios_config:
        lines:
          - "interface gigabitethernet0/1"
          - " description Internet Connection"
          - " ip address dhcp"
          - " no shutdown"
    
    - name: Configure OSPF routing
      ios_config:
        lines:
          - "router ospf 1"
          - " router-id 1.1.1.1"
          - " log-adjacency-changes"
          - " network {{ item.network }} area 0"
        parents: []
      loop: "{{ network_config.departments | default([]) }}"
    
    - name: Configure SNMP
      ios_config:
        lines:
          - "snmp-server community {{ snmp_community }} RO"
          - "snmp-server location {{ snmp_location }}"
          - "snmp-server contact {{ snmp_contact }}"
    
    - name: Configure NAT for internet access
      ios_config:
        lines:
          - "ip nat inside source list 1 interface gigabitethernet0/1 overload"
          - "access-list 1 permit 192.168.0.0 0.0.255.255"
    
    - name: Mark VLAN interfaces as NAT inside
      ios_config:
        lines:
          - "interface vlan {{ item.vlan_id }}"
          - " ip nat inside"
        parents: []
      loop: "{{ network_config.departments | default([]) }}"
    
    - name: Mark WAN interface as NAT outside
      ios_config:
        lines:
          - "interface gigabitethernet0/1"
          - " ip nat outside"

# Configure Department Switches
- name: Configure Department Switches
  hosts: switches
  gather_facts: no
  connection: network_cli
  
  vars:
    network_config: "{{ lookup('file', '../network_data.yml') | from_yaml }}"
    
  tasks:
    - name: Configure hostname
      ios_config:
        lines:
          - "hostname {{ inventory_hostname }}"
    
    - name: Configure basic settings
      ios_config:
        lines:
          - "service timestamps debug datetime msec"
          - "service timestamps log datetime msec"
          - "service password-encryption"
          - "ip domain-name {{ domain_name }}"
    
    - name: Configure enable secret
      ios_config:
        lines:
          - "enable secret {{ enable_secret }}"
    
    - name: Configure console and VTY access
      ios_config:
        lines:
          - "line console 0"
          - " password {{ console_password }}"
          - " login"
          - " logging synchronous"
          - "line vty 0 4"
          - " password {{ vty_password }}"
          - " login"
          - " transport input telnet ssh"
    
    - name: Determine department VLAN from hostname
      set_fact:
        dept_vlan: "{{ network_config.departments | selectattr('name', 'in', inventory_hostname) | map(attribute='vlan_id') | first | default(99) }}"
        dept_name: "{{ network_config.departments | selectattr('name', 'in', inventory_hostname) | map(attribute='name') | first | default('Unknown') }}"
        device_count: "{{ network_config.departments | selectattr('name', 'in', inventory_hostname) | map(attribute='device_count') | first | default(5) }}"
    
    - name: Create department VLAN
      ios_config:
        lines:
          - "vlan {{ dept_vlan }}"
          - " name {{ dept_name }}_VLAN"
    
    - name: Configure access ports for department devices
      ios_config:
        lines:
          - "interface range fastethernet0/1-{{ device_count }}"
          - " description {{ dept_name }} Department Devices"
          - " switchport mode access           - " 
          - "switchport access vlan {{ dept_vlan }}"
          - " spanning-tree portfast"
          - " no shutdown"
    
    - name: Configure trunk port to core router
      ios_config:
        lines:
          - "interface gigabitethernet0/1"
          - " description Trunk to Core Router"
          - " switchport trunk encapsulation dot1q"
          - " switchport mode trunk"
          - " switchport trunk allowed vlan {{ dept_vlan }}"
          - " no shutdown"
    
    - name: Configure management VLAN interface
      ios_config:
        lines:
          - "interface vlan {{ dept_vlan }}"
          - " description {{ dept_name }} Management Interface"
          - " ip address {{ ansible_host }} 255.255.255.0"
          - " no shutdown"
    
    - name: Configure default gateway
      ios_config:
        lines:
          - "ip default-gateway {{ network_config.departments | selectattr('name', 'in', inventory_hostname) | map(attribute='gateway') | first | default('192.168.1.1') }}"
    
    - name: Configure spanning-tree
      ios_config:
        lines:
          - "spanning-tree mode rapid-pvst"
          - "spanning-tree vlan {{ dept_vlan }} priority 8192"
    
    - name: Configure SNMP for monitoring
      ios_config:
        lines:
          - "snmp-server community {{ snmp_community }} RO"
          - "snmp-server location {{ snmp_location }} - {{ dept_name }} Department"
          - "snmp-server contact {{ snmp_contact }}"
    
    - name: Configure port security for access ports
      ios_config:
        lines:
          - "interface range fastethernet0/1-{{ device_count }}"
          - " switchport port-security"
          - " switchport port-security maximum 2"
          - " switchport port-security violation restrict"
          - " switchport port-security mac-address sticky"

# Configure Docker Containers (Hosts)
- name: Configure Department Hosts
  hosts: docker_hosts
  gather_facts: no
  connection: docker
  
  vars:
    network_config: "{{ lookup('file', '../network_data.yml') | from_yaml }}"
    
  tasks:
    - name: Wait for containers to be ready
      wait_for_connection:
        timeout: 60
    
    - name: Install basic networking tools
      apk:
        name:
          - iproute2
          - iputils
          - openssh
          - curl
          - net-tools
          - tcpdump
        state: present
        update_cache: yes
    
    - name: Set hostname based on inventory
      hostname:
        name: "{{ inventory_hostname }}"
    
    - name: Configure network interface
      shell: |
        # Get VLAN ID from hostname pattern
        VLAN_ID=$(echo "{{ inventory_hostname }}" | grep -o 'VLAN[0-9]*' | grep -o '[0-9]*')
        HOST_NUM=$(echo "{{ inventory_hostname }}" | grep -o '[0-9]*$')
        
        # Configure IP address based on VLAN
        ip addr add 192.168.${VLAN_ID}.${HOST_NUM}/24 dev eth0
        ip route add default via 192.168.${VLAN_ID}.1
        
        # Make configuration persistent
        echo "192.168.${VLAN_ID}.${HOST_NUM}/24" > /etc/network/ip_address
        echo "192.168.${VLAN_ID}.1" > /etc/network/gateway
      args:
        executable: /bin/sh
    
    - name: Configure DNS resolution
      lineinfile:
        path: /etc/resolv.conf
        line: "nameserver {{ item }}"
        create: yes
      loop: "{{ dns_servers }}"
    
    - name: Create department user
      user:
        name: "dept_user"
        password: "{{ 'department123' | password_hash('sha512') }}"
        shell: /bin/sh
        create_home: yes
    
    - name: Install SSH keys for remote access
      authorized_key:
        user: dept_user
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        state: present
      ignore_errors: yes
    
    - name: Configure SSH service
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        create: yes
      loop:
        - { regexp: '^PasswordAuthentication', line: 'PasswordAuthentication yes' }
        - { regexp: '^PermitRootLogin', line: 'PermitRootLogin no' }
        - { regexp: '^Port', line: 'Port 22' }
      notify: restart ssh
    
    - name: Start SSH service
      service:
        name: ssh
        state: started
        enabled: yes
      ignore_errors: yes

# Verification and Testing Tasks
- name: Network Verification
  hosts: all
  gather_facts: no
  
  tasks:
    - name: Test connectivity between departments
      ping:
        data: "Test connectivity from {{ inventory_hostname }}"
      delegate_to: "{{ item }}"
      loop: "{{ groups['all'] }}"
      when: item != inventory_hostname
      ignore_errors: yes
      register: connectivity_test
    
    - name: Display connectivity results
      debug:
        msg: "Connectivity from {{ inventory_hostname }} to {{ item.item }}: {{ 'SUCCESS' if item.ping is defined else 'FAILED' }}"
      loop: "{{ connectivity_test.results | default([]) }}"
      when: connectivity_test.results is defined

# Final Configuration Summary
- name: Configuration Summary
  hosts: localhost
  gather_facts: no
  connection: local
  
  tasks:
    - name: Display configuration summary
      debug:
        msg: |
          Network Configuration Complete!
          
          Configured Components:
          - Core Router with inter-VLAN routing
          - {{ groups['switches'] | length }} Department Switches
          - {{ groups['docker_hosts'] | length }} Department Hosts
          - OSPF routing protocol
          - NAT for internet access
          - SNMP monitoring
          - Port security on access ports
          
          Network Features:
          - VLANs: {{ network_config.departments | map(attribute='vlan_id') | list | join(', ') }}
          - Domain: {{ domain_name }}
          - DNS: {{ dns_servers | join(', ') }}
          - NTP: {{ ntp_server }}
          
          Security Features:
          - Password encryption enabled
          - Port security with MAC address learning
          - Access control lists for NAT
          - SSH access configured
      run_once: true

# Handlers for service restarts
  handlers:
    - name: restart ssh
      service:
        name: ssh
        state: restarted
      listen: restart ssh

# Backup configuration
- name: Backup Network Configuration
  hosts: routers:switches
  gather_facts: no
  connection: network_cli
  
  tasks:
    - name: Create backup directory
      file:
        path: "./backups/{{ ansible_date_time.date }}"
        state: directory
      delegate_to: localhost
      run_once: true
    
    - name: Backup running configuration
      ios_config:
        backup: yes
        backup_options:
          filename: "{{ inventory_hostname }}_{{ ansible_date_time.date }}.cfg"
          dir_path: "./backups/{{ ansible_date_time.date }}"
      register: backup_result
    
    - name: Display backup location
      debug:
        msg: "Configuration backed up to: {{ backup_result.backup_path | default('backup failed') }}"
